@{
    Layout = "_Guest_Layout";
}
<form onsubmit="sendMessage(event)" class="row g-3 needs-validation" novalidate>
  <div class="col-md-4">
    <label for="nome" class="form-label">Nome</label>
    <input type="text" class="form-control" id="nome">
        <div class="" id="name_feedback">
      
    </div>
  </div>
  
  <div class="col-md-6">
    <label for="email" class="form-label">Email</label>
    <input type="email" class="form-control" id="email">
        <div class="" id="email_feedback">
      
    </div>
  </div>
  <div class="col-md-3">
    <label for="titolo" class="form-label">Titolo</label>
    <input type="text" class="form-control" id="titolo">
        <div class="" id="title_feedback">
      
    </div>
  </div>
    <div class="mb-3">
        <label for="messaggio" class="form-label">Messaggio</label>
        <textarea class="form-control" id="messaggio"></textarea>
        <div class="" id="body_feedback">
        </div>
    </div>
  <div class="col-12">
    <button class="btn btn-primary" type="submit">Submit form</button>
  </div>
</form>

<div class="row justify-content-center">
    <div class="col-12 col-md-8 col-xl-6">

    </div>
</div>

@section Scripts{
    <script type="text/javascript">

        function sendMessage(e){
            e.preventDefault();
            axios.post('/api/message/', readInput()).then(resp => {
                messageRegistered()
            }).catch(error => {
                handleFeedback(error.response.data.errors)
            })
        }
      
        function readInput(){
            let name = $('#nome').val()
            let email = $('#email').val()
            let title = $('#titolo').val()
            let body = $('#messaggio').val()
            let data = {
                Name: name === '' ? null : name,
                Email: email === '' ? null : title,
                Title: title === '' ? null : body,
                Body: body === '' ? null : body
            }

            return data
        }

        function messageRegistered(){
            swal("Messaggio inserito correttamente!", "ok").then(() => location.reload())
            

        }



        function setFeedbackClasses(inputElement, messageElement, messageArray, invalid){
            if (invalid){
                messageElement.classList.add("invalid-feedback")
                messageElement.innerHTML = messageArray[0]
                inputElement.classList.add("is-invalid")
            } else {
                messageElement.classList.remove("invalid-feedback")
                messageElement.innerHTML = ''
                inputElement.classList.add("is-valid")
                inputElement.classList.remove("is-invalid")
            }
            
        }

    
        function handleFeedback(errors){
            const nameInput = document.getElementById('nome')
            const nameFeedback = document.getElementById('name_feedback')
            const emailInput = document.getElementById('email')
            const emailFeedback = document.getElementById('email_feedback')
            const titleInput = document.getElementById('titolo')
            const titleFeedback = document.getElementById('title_feedback')
            const bodyInput = document.getElementById('messaggio')
            const bodyFeedback = document.getElementById('body_feedback')
            
            
                setFeedbackClasses(nameInput, nameFeedback, errors.Name ?? '', 'Name' in errors)
                setFeedbackClasses(emailInput, emailFeedback, errors.Email ?? '', 'Email' in errors)
                setFeedbackClasses(titleInput, titleFeedback, errors.Title ?? '', 'Title' in errors)
                setFeedbackClasses(bodyInput, bodyFeedback, errors.Body ?? '', 'Body' in errors)
            
            
        }
    
    </script>
}
