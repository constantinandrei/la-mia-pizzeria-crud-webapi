@{
    Layout = "_Guest_Layout";
}

@model int

<div class="row no_pizza text-center d-none">
    <div class="col-6">
        <h3>Pizza non trovata</h3>
    </div>
</div>

<div class="row pizza_table d-none">
   
</div>

<section style="background-color: #e7effd;">
    <div id="comments" class="container my-5 py-5 text-dark">
        <div id="comments_row" class="row d-flex justify-content-center mb-3">
            
        </div>
        <div class="row d-flex justify-content-center">
            <h4>Aggiungi un commento</h4>
            <form onsubmit="sendComment(event)" class="col-md-11 col-lg-9 col-xl-7 row justify-content-center mt-3" novalidate>
                <div class="col-md-5">
                    <label for="nome" class="form-label">Nome</label>
                    <input type="text" class="form-control" id="nome">
                    <div class="" id="name_feedback">
                    </div>
                </div>

                <div class="col-md-5">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" class="form-control" id="email">
                    <div class="" id="email_feedback">
                    </div>
                </div>
                <div class="col-md-2">
                    <label for="stars" class="form-label">Voto</label>
                    <input type="number" class="form-control" id="stars">
                    <div class="" id="stars_feedback">
                    </div>
                </div>
                <div class="mb-3">
                    <label for="comment" class="form-label">Commento</label>
                    <textarea class="form-control" id="comment"></textarea>
                    <div class="" id="comment_feedback">
                    </div>
                </div>
                <div class="col-10">
                    <button class="btn btn-primary" type="submit">Invia</button>
                </div>
            </form>
        </div>
    </div>
</section>

@section Scripts{
    <script type="text/javascript">

    axios.get('/api/pizza/details/@Model').then(resp => {
        renderPizza(resp.data)
    }).catch(error => {
            document.querySelector('.no_pizza').classList.remove('d-none');
            document.querySelector('.pizza_table').classList.add('d-none');
    })

    function renderPizza(pizza){

                document.querySelector('.pizza_table').classList.remove('d-none');
                document.querySelector('.no_pizza').classList.add('d-none');
                document.querySelector('.pizza_table').innerHTML = '';
            

            document.querySelector('.pizza_table').innerHTML += `<div class="col-12 col-md-4 p-2">
                        <div class="card post h-100">
                            <img src="${pizza.image}" class="card-img-top" alt="...">
                            <div class="card-body">
                            <h5 class="card-title">${pizza.name}</h5>
                            <p class="card-text">Categoria: ${pizza.category.name}</p>
                            <p class="card-text">${pizza.description}</p>
                            <p class="card-text" id="ing_pizza${pizza.id}">Ingredienti: </p>
                            <p class="card-text">${pizza.price} €</p>
                            </div>
                        </div>
                    </div>
                    `;
            let ingredienti = '';
            pizza.ingredients.forEach((ing, i, array) => {
                const delimitator = i < array.length - 1 ? ', ' : '.'
                ingredienti += ing.name + delimitator
            })
            document.getElementById('ing_pizza' + pizza.id).innerHTML += ingredienti;

            if (pizza.comments){
                console.log(pizza.comments)
                renderCommentList('comments_row', pizza.comments)
            }
    }

    function el(id){
        return document.getElementById(id)
    }

    function addClass(id, cl){
        el(id).classList.add(cl)
    }

        function removeClass(id, cl) {
            el(id).classList.remove(cl)
        }
    let buttons = []
    function renderCommentList(elementId, cList){
        const htmlElement = el(elementId)
        cList.forEach(comment => {
            htmlElement.innerHTML += renderComment(comment)
            let index = 0
            
            buttons.push(document.getElementById('update_comment_' + comment.id))
            buttons[index].addEventListener('click', function(){
                updateForm(comment)
            index++;
            })
        })
    }

    function renderComment(comment){
        const commentHtml = `
                <div id="comment_${comment.id}" class="col-md-11 col-lg-9 col-xl-7">

                        <div class="d-flex flex-start">
                            <div class="card w-100">
                                <div class="card-body p-4">
                                    <div class="">
                                        <h5>${comment.userName}</h5>
                                        <p>
                                            ${comment.commentText}
                                        </p>

                                        <div class="d-flex g-3 justify-content-end align-items-center">
                                            <button id="delete_comment_${comment.id}" class="btn btn-sm btn-danger me-3"> Elimina</button>
                                                    <button id="update_comment_${comment.id}" class="btn btn-sm btn-outline-primary">Modifica</button>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
        `
        return commentHtml;
    }

        function sendComment(e) {
            e.preventDefault();
            axios.post('/api/comment/', readInput()).then(resp => {
                messageRegistered()
            }).catch(error => {
                handleFeedback(error.response.data.errors)
            })
        }

        function updateComment(e) {
            e.preventDefault();
            axios.post('/api/comment/', readInput()).then(resp => {
                messageRegistered()
            }).catch(error => {
                handleFeedback(error.response.data.errors)
            })
        }

        function readInput() {
            let name = $('#nome').val()
            let email = $('#email').val()
            let stars = $('#stars').val()
            let body = $('#comment').val()
            let data = {
                UserName: name === '' ? null : name,
                UserEmail: email === '' ? null : email,
                CommentText: body === '' ? null : body,
                Stars: stars === '' ? null : stars,
                PizzaId: @Model
            }

            return data
        }

        function messageRegistered() {
            swal("Commento inserito correttamente!", "ok").then(() => location.reload())
        }



        function setFeedbackClasses(inputElement, messageElement, messageArray, invalid) {
            if (invalid) {
                messageElement.classList.add("invalid-feedback")
                messageElement.innerHTML = messageArray[0]
                inputElement.classList.add("is-invalid")
            } else {
                messageElement.classList.remove("invalid-feedback")
                messageElement.innerHTML = ''
                inputElement.classList.add("is-valid")
                inputElement.classList.remove("is-invalid")
            }

        }


        function handleFeedback(errors) {
            const nameInput = document.getElementById('nome')
            const nameFeedback = document.getElementById('name_feedback')
            const emailInput = document.getElementById('email')
            const emailFeedback = document.getElementById('email_feedback')
            const titleInput = document.getElementById('titolo')
            const titleFeedback = document.getElementById('title_feedback')
            const bodyInput = document.getElementById('messaggio')
            const bodyFeedback = document.getElementById('body_feedback')


            setFeedbackClasses(nameInput, nameFeedback, errors.Name ?? '', 'Name' in errors)
            setFeedbackClasses(emailInput, emailFeedback, errors.Email ?? '', 'Email' in errors)
            setFeedbackClasses(titleInput, titleFeedback, errors.Title ?? '', 'Title' in errors)
            setFeedbackClasses(bodyInput, bodyFeedback, errors.Body ?? '', 'Body' in errors)

        }

        function updateForm(comment){

            const element = el('comment_' + comment.id)
            element.innerHTML = `
                    <form onsubmit="updateComment(event)" class="col-md-11 col-lg-9 col-xl-7 row justify-content-center mt-3" novalidate>
                        <div class="col-md-5">
                            <label for="nome" class="form-label">Nome</label>
                            <input type="text" class="form-control" id="nome" value=${comment.userName}>
                            <div class="" id="name_feedback">
                            </div>
                        </div>

                        <div class="col-md-5">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" value="${comment.userEmail}">
                            <div class="" id="email_feedback">
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label for="stars" class="form-label">Voto</label>
                            <input type="number" class="form-control" id="stars" value="${comment.stars}">
                            <div class="" id="stars_feedback">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="comment" class="form-label">Commento</label>
                            <textarea class="form-control" id="comment">${comment.commentText}</textarea>
                            <div class="" id="comment_feedback">
                            </div>
                        </div>
                        <div class="col-10">
                            <button class="btn btn-primary" type="submit">Invia</button>
                        </div>
                    </form>
            
            `
        }

</script>
}


